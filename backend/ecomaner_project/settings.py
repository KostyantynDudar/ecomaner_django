# settings.py



"""
Django settings for ecomaner project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path



import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Инициализация переменных окружения
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-o@207%&fta1=9&_ubzq3a-0_5=gcb%#6z1y5y@7$cb^i(bt%^t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'ecomaner.com', 'www.ecomaner.com']




# Application definition



INSTALLED_APPS = [
    # стандартные приложения Django
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'apps.news',

    # созданные вами приложения (с указанием папки apps)

    'apps.main',
    'apps.eco_map',

    
    # сторонние приложения
    'rest_framework',

    'corsheaders', 

    'apps.accounts', 
]


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  
    "https://ecomaner.com",
    "https://www.ecomaner.com",
    # Адрес фронтенда на React
]

ROOT_URLCONF = 'ecomaner_project.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "main" / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]




WSGI_APPLICATION = 'ecomaner_project.wsgi.application'



# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Настройки базы данных
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': env('DB_NAME'),
        # 'USER': env('DB_USER'),
        # 'PASSWORD': env('DB_PASSWORD'),
        # 'HOST': env('DB_HOST'),
        # 'PORT': env('DB_PORT'),

        # Прямое указание параметров подключения
        'NAME': 'ecomaner_db',
        'USER': 'postgres',
        'PASSWORD': 'f!#8Cc(nNXL_5645U)R^5Bi6bK_(te3v)',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}


# Секретный ключ для JWT (если будет использоваться в Django)
SECRET_KEY = env('JWT_SECRET')


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/home/ecomaner_django/logs/django_debug.log',
        },
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',  # Вывод полного формата сообщений
        },
    },
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'loggers': {
        'django.db.backends': {
            'level': 'DEBUG',  # Уровень DEBUG выводит все SQL-запросы
            'handlers': ['console'],
            'propagate': False,
        },
        'django': {
            'level': 'DEBUG',
            'handlers': ['console'],
            'propagate': False,
        },
    },
}




# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

# settings.py

CSRF_TRUSTED_ORIGINS = ['https://ecomaner.com']


AUTH_USER_MODEL = 'accounts.CustomUser'


from dotenv import load_dotenv
load_dotenv()  # Загрузка из .env файла

key_sendgrid = os.getenv('SENDGRID_API_KEY')

print(key_sendgrid)
print(type(key_sendgrid))

EMAIL_BACKEND = 'sendgrid_backend.SendgridBackend'
SENDGRID_API_KEY = key_sendgrid 
#  SENDGRID_API_KEY = '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'
print(f"Значение SENDGRID_API_KEY: {SENDGRID_API_KEY}")

# Дополнительные параметры (необязательно)
SENDGRID_SANDBOX_MODE_IN_DEBUG = False  # Убедитесь, что установлено False для реальной отправки писем
SENDGRID_ECHO_TO_STDOUT = True  # Вывод email-сообщений в консоль (для отладки)

