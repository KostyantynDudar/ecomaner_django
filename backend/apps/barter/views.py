from django.shortcuts import render, get_object_or_404
from django.contrib.auth.decorators import login_required
from rest_framework import generics, permissions, serializers
from rest_framework.views import APIView
from rest_framework.response import Response
from rest_framework.throttling import UserRateThrottle
from rest_framework.exceptions import PermissionDenied
from django.db.models import Q
from django.contrib.auth import get_user_model
import logging

from .models import BarterRequest, BarterDeal, UserBalance
from .serializers import BarterRequestSerializer, BarterDealSerializer

# ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º IsAuthenticated –≤ permissions
from rest_framework.permissions import IsAuthenticated


logger = logging.getLogger(__name__)

# üîπ –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
def barter_public(request):
    return render(request, 'barter/public.html')

@login_required
def barter_dashboard(request):
    return render(request, 'barter/dashboard.html')

@login_required
def barter_requests(request):
    return render(request, 'barter/requests.html')

# üîπ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
class BarterRequestThrottle(UserRateThrottle):
    rate = '1000/day'

# üîπ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ (–¢–û–õ–¨–ö–û —Å–≤–æ–∏!)
class UserBarterRequestsAPIView(generics.ListCreateAPIView):
    serializer_class = BarterRequestSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return BarterRequest.objects.filter(owner=self.request.user)  # ‚úÖ –¢–æ–ª—å–∫–æ —Å–≤–æ–∏ –∑–∞—è–≤–∫–∏

    def perform_create(self, serializer):
        logger.debug(f"üìå –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º: {self.request.data}")
        serializer.save(
            owner=self.request.user,
            location=self.request.data.get('address', ''),
            estimated_value=self.request.data.get('value', 0),
            is_reserved=False
        )

# üîπ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∑–∞—è–≤–∫–∏ (–î–û–°–¢–£–ü –£–ß–ê–°–¢–ù–ò–ö–ê–ú –°–î–ï–õ–ö–ò)
class UserBarterRequestDetailAPIView(generics.RetrieveUpdateDestroyAPIView):
    serializer_class = BarterRequestSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        user = self.request.user
        
        # ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
        queryset = BarterRequest.objects.filter(
            Q(owner=user) |
            Q(id__in=BarterDeal.objects.filter(item_A_id__in=BarterRequest.objects.filter(owner=user).values_list("id", flat=True)).values_list("item_B_id", flat=True)) |
            Q(id__in=BarterDeal.objects.filter(item_B_id__in=BarterRequest.objects.filter(owner=user).values_list("id", flat=True)).values_list("item_A_id", flat=True))
        ).distinct()


        logger.debug(f"üìå –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–æ–≤–∞—Ä: {self.request.query_params}, –ù–∞–π–¥–µ–Ω–Ω—ã–µ ID: {[item.id for item in queryset]}")
        
        return queryset

# üîπ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserBalanceAPIView(APIView):
    permission_classes = [IsAuthenticated]

    def get(self, request):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        user_balance, _ = UserBalance.objects.get_or_create(user=request.user)
        return Response({"balance": user_balance.balance})

# üîπ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫
class AllBarterRequestsAPIView(generics.ListAPIView):
    serializer_class = BarterRequestSerializer
    permission_classes = [permissions.AllowAny]

    def get_queryset(self):
        return BarterRequest.objects.all()

from django.contrib.auth import get_user_model

User = get_user_model()  # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç

# üîπ API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–¥–µ–ª–∫–∏

class CreateDealAPIView(generics.CreateAPIView):
    serializer_class = BarterDealSerializer
    permission_classes = [permissions.IsAuthenticated]

    def perform_create(self, serializer):
        logger.debug(f"üìå –î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å–¥–µ–ª–∫–∏: {self.request.data}")  # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ

        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ ID –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
        item_A = get_object_or_404(BarterRequest, id=self.request.data.get("item_A"))
        item_B = get_object_or_404(BarterRequest, id=self.request.data.get("item_B")) if self.request.data.get("item_B") else None
        compensation = float(self.request.data.get("compensation_points", 0))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –¥—Ä—É–≥–æ–π —Å–¥–µ–ª–∫–µ
        if item_A.is_reserved:
            raise serializers.ValidationError("–≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –¥—Ä—É–≥–æ–π —Å–¥–µ–ª–∫–µ!")
        if item_B and item_B.is_reserved:
            raise serializers.ValidationError("–¢–æ–≤–∞—Ä B —É–∂–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω –≤ –¥—Ä—É–≥–æ–π —Å–¥–µ–ª–∫–µ!")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        initiator_balance, _ = UserBalance.objects.get_or_create(user=self.request.user)
        if compensation > initiator_balance.balance:
            raise serializers.ValidationError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏!")

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —Å–¥–µ–ª–∫–∏
        partner = None
        if item_B:
            partner = item_B.owner
        elif self.request.data.get("partner_email"):
            partner = get_object_or_404(User, email=self.request.data.get("partner_email"))

        if not partner:
            raise serializers.ValidationError("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É –±–µ–∑ –ø–∞—Ä—Ç–Ω–µ—Ä–∞!")

        logger.debug(f"üìå Partner –Ω–∞–π–¥–µ–Ω: {partner}")  # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏
        status = "active" if partner else "pending"

        # –ü–æ–º–µ—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∫–∞–∫ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
        item_A.is_reserved = True
        item_A.save()
        if item_B:
            item_B.is_reserved = True
            item_B.save()

        # –°–æ–∑–¥–∞–µ–º —Å–¥–µ–ª–∫—É
        deal = serializer.save(
            initiator=self.request.user,
            partner=partner,
            item_A=item_A,
            item_B=item_B,
            status=status
        )

        logger.info(f"‚úÖ –°–¥–µ–ª–∫–∞ {deal.id} —Å–æ–∑–¥–∞–Ω–∞: {self.request.user.email} ‚Üî {partner.email if partner else '–û–∂–∏–¥–∞–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞'}")

        # TODO: –ï—Å–ª–∏ —Å–¥–µ–ª–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–∞—Ä—Ç–Ω—ë—Ä—É



# üîπ API –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π —Å–¥–µ–ª–∫–∏
from rest_framework.exceptions import PermissionDenied

class DealDetailAPIView(generics.RetrieveAPIView):
    queryset = BarterDeal.objects.all()
    serializer_class = BarterDealSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_object(self):
        deal = super().get_object()
        if deal.initiator != self.request.user and deal.partner != self.request.user:
            logger.warning(f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: {self.request.user} –ø—ã—Ç–∞–ª—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Å–¥–µ–ª–∫—É {deal.id}")
            raise PermissionDenied("–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ.")
        return deal

# üîπ API –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏
class ConfirmDealAPIView(generics.UpdateAPIView):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏. –ï—Å–ª–∏ –±–∞–ª–ª—ã —Ä–∞–≤–Ω—ã ‚Äî —Å–¥–µ–ª–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –∏–¥—ë—Ç –¥–æ–ø–ª–∞—Ç–∞."""
    queryset = BarterDeal.objects.all()
    serializer_class = BarterDealSerializer
    permission_classes = [IsAuthenticated]

    def get_object(self):
        deal = super().get_object()
        if self.request.user != deal.initiator and self.request.user != deal.partner:
            logger.warning(f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω: {self.request.user} –ø—ã—Ç–∞–ª—Å—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–¥–µ–ª–∫—É {deal.id}")
            raise PermissionDenied("–í—ã –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —ç—Ç–æ–π —Å–¥–µ–ª–∫–µ.")
        return deal

    def update(self, request, *args, **kwargs):
        deal = self.get_object()

        # ‚ùå –ï—Å–ª–∏ —Å–¥–µ–ª–∫–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å, –∑–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        if deal.status == "started":
            return Response({"error": "–°–¥–µ–ª–∫–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å!"}, status=400)

        price_difference = abs(deal.item_A.estimated_value - deal.item_B.estimated_value)
        user_balance, _ = UserBalance.objects.get_or_create(user=request.user)

        # ‚úÖ –°–¥–µ–ª–∫–∞ —Å—Ç–∞—Ä—Ç—É–µ—Ç, –µ—Å–ª–∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–≤–Ω–∞
        if deal.item_A.estimated_value == deal.item_B.estimated_value:
            deal.status = "started"
            deal.save()
            return Response({"message": "–°–¥–µ–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!"}, status=200)

        # ‚úÖ –ï—Å–ª–∏ –±–∞–ª–ª–æ–≤ —Ö–≤–∞—Ç–∞–µ—Ç, —Ä–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –∏—Ö –∏ —Å—Ç–∞—Ä—Ç—É–µ–º —Å–¥–µ–ª–∫—É
        if user_balance.balance >= price_difference:
            user_balance.balance -= price_difference
            user_balance.save()

            deal.status = "started"
            deal.save()

            return Response({"message": "–°–¥–µ–ª–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å —Å –¥–æ–ø–ª–∞—Ç–æ–π!"}, status=200)

        return Response({"error": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–ª–æ–≤ –¥–ª—è —Å–¥–µ–ª–∫–∏!"}, status=400)



# üîπ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–¥–µ–ª–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserDealsAPIView(generics.ListAPIView):
    serializer_class = BarterDealSerializer
    permission_classes = [permissions.IsAuthenticated]

    def get_queryset(self):
        return BarterDeal.objects.filter(
            Q(initiator=self.request.user) | Q(partner=self.request.user)
        ).distinct()

# üîπ API –¥–ª—è —á–∞—Ç–∞
class DealChatAPIView(APIView):
    """–ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —á–∞—Ç–∞ —Å–¥–µ–ª–∫–∏"""
    permission_classes = [IsAuthenticated]

    def get(self, request, pk):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (–∑–∞–≥–ª—É—à–∫–∞)"""
        deal = get_object_or_404(BarterDeal, pk=pk)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–¥–µ–ª–∫–∏
        if request.user != deal.initiator and request.user != deal.partner:
            return Response({"error": "–í—ã –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ —Å–¥–µ–ª–∫–∏!"}, status=403)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É (–ø—É—Å—Ç–æ–π —á–∞—Ç)
        return Response({"messages": []})
