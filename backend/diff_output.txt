diff --git a/backend/apps/accounts/forms.py b/backend/apps/accounts/forms.py
new file mode 100644
index 0000000..2a4d44b
--- /dev/null
+++ b/backend/apps/accounts/forms.py
@@ -0,0 +1,6 @@
+# forms.py
+from django import forms
+
+class RegisterForm(forms.Form):
+    email = forms.EmailField(label="Email", required=True)
+    password = forms.CharField(label="Password", widget=forms.PasswordInput, required=True)
diff --git a/backend/apps/accounts/register.html b/backend/apps/accounts/register.html
new file mode 100644
index 0000000..2b15298
--- /dev/null
+++ b/backend/apps/accounts/register.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Регистрация</title>
+</head>
+<body>
+    <h2>Регистрация</h2>
+    <form method="post">
+        {% csrf_token %}
+        {{ form.as_p }}
+        <button type="submit">Зарегистрироваться</button>
+    </form>
+</body>
+</html>
diff --git a/backend/apps/accounts/templates/accounts/register.html b/backend/apps/accounts/templates/accounts/register.html
new file mode 100644
index 0000000..2b15298
--- /dev/null
+++ b/backend/apps/accounts/templates/accounts/register.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Регистрация</title>
+</head>
+<body>
+    <h2>Регистрация</h2>
+    <form method="post">
+        {% csrf_token %}
+        {{ form.as_p }}
+        <button type="submit">Зарегистрироваться</button>
+    </form>
+</body>
+</html>
diff --git a/backend/apps/accounts/urls.py b/backend/apps/accounts/urls.py
new file mode 100644
index 0000000..7135172
--- /dev/null
+++ b/backend/apps/accounts/urls.py
@@ -0,0 +1,17 @@
+# ecomaner_django-master/backend/apps/accounts/urls.py
+
+from django.urls import path
+from . import views
+
+app_name = 'accounts'
+
+urlpatterns = [
+    # Маршрут для страницы регистрации
+    path('register/', views.register_user, name='register'),
+
+    # Маршрут для подтверждения email (активация аккаунта)
+    path('confirm/<uidb64>/<token>/', views.confirm_email, name='confirm_email'),
+
+    # Маршрут для страницы успешной регистрации
+    path('registration-success/', views.registration_success, name='registration_success'),
+]
diff --git a/backend/apps/accounts/views.py b/backend/apps/accounts/views.py
index 91ea44a..722e632 100755
--- a/backend/apps/accounts/views.py
+++ b/backend/apps/accounts/views.py
@@ -1,3 +1,60 @@
-from django.shortcuts import render
+#  ecomaner_django-master/backend/apps/accounts/views.py
+
+
+from django.shortcuts import render, redirect
+from django.core.mail import send_mail
+from django.urls import reverse
+from django.utils.http import urlsafe_base64_encode
+from django.utils.encoding import force_bytes
+from django.contrib.auth.tokens import default_token_generator
+from django.contrib.auth import get_user_model
+from .forms import RegisterForm
+
+User = get_user_model()
+
+def register_user(request):
+    if request.method == "POST":
+        form = RegisterForm(request.POST)
+        if form.is_valid():
+            email = form.cleaned_data['email']
+            password = form.cleaned_data['password']
+            user = User.objects.create_user(email=email, password=password)
+            user.is_active = False  # Делаем пользователя неактивным до подтверждения email
+            user.save()
+
+            # Генерация токена для подтверждения email
+            token = default_token_generator.make_token(user)
+            uid = urlsafe_base64_encode(force_bytes(user.pk))
+            confirm_url = request.build_absolute_uri(reverse('accounts:confirm_email', args=[uid, token]))
+
+            # Отправка подтверждающего письма
+            send_mail(
+                'Подтверждение регистрации',
+                f'Для завершения регистрации перейдите по ссылке: {confirm_url}',
+                'no-reply@ecomaner.com',
+                [email],
+                fail_silently=False,
+            )
+            return redirect('accounts:registration_success')
+    else:
+        form = RegisterForm()
+
+    return render(request, 'accounts/register.html', {'form': form})
+
+from django.utils.http import urlsafe_base64_decode
+from django.http import HttpResponse
+
+def confirm_email(request, uidb64, token):
+    try:
+        uid = urlsafe_base64_decode(uidb64).decode()
+        user = User.objects.get(pk=uid)
+    except (TypeError, ValueError, OverflowError, User.DoesNotExist):
+        user = None
+
+    if user is not None and default_token_generator.check_token(user, token):
+        user.is_active = True
+        user.save()
+        return HttpResponse('Email подтвержден, теперь вы можете войти.')
+    else:
+        return HttpResponse('Ссылка подтверждения недействительна или устарела.')
 
-# Create your views here.
diff --git a/backend/ecomaner_project/settings.py b/backend/ecomaner_project/settings.py
index eb3da51..744d550 100755
--- a/backend/ecomaner_project/settings.py
+++ b/backend/ecomaner_project/settings.py
@@ -238,4 +238,12 @@ REST_FRAMEWORK = {
 CSRF_TRUSTED_ORIGINS = ['https://ecomaner.com']
 
 
-AUTH_USER_MODEL = 'accounts.CustomUser'
\ No newline at end of file
+AUTH_USER_MODEL = 'accounts.CustomUser'
+
+
+EMAIL_BACKEND = 'sendgrid_backend.SendgridBackend'
+SENDGRID_API_KEY = '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'  # Замените на ваш API ключ SendGrid
+# Дополнительные параметры (необязательно)
+SENDGRID_SANDBOX_MODE_IN_DEBUG = False  # Убедитесь, что установлено False для реальной отправки писем
+SENDGRID_ECHO_TO_STDOUT = True  # Вывод email-сообщений в консоль (для отладки)
+
diff --git a/backend/ecomaner_project/urls.py b/backend/ecomaner_project/urls.py
index db62d4e..c33137b 100755
--- a/backend/ecomaner_project/urls.py
+++ b/backend/ecomaner_project/urls.py
@@ -24,11 +24,15 @@ from apps.eco_map.views import test_view, another_test_view  # Импортир
 
 urlpatterns = [
     path('admin/', admin.site.urls),
+    path('accounts/', include('apps.accounts.urls')),
+
     path('api/locations/', include('apps.eco_map.urls')),  # Подключаем API для карты
+    path('api/map/', include('apps.eco_map.urls')),  # Унифицированный путь к карте
 
     path('api/news/', include('apps.news.urls')),  # Унифицируем путь к news API
+
     path('api/main/', include('apps.main.urls')),  # Путь к Main API
-    path('api/map/', include('apps.eco_map.urls')),  # Унифицированный путь к карте
+
     path('test/', test_view),  # Тестовый маршрут
     path('test-direct/', test_view),  # Второй тестовый маршрут
 ]
